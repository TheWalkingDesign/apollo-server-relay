import fs from 'fs';
import webpack from 'webpack';
import HtmlWebpackPlugin from 'html-webpack-plugin';

const path = require('path');

module.exports = {
  entry: [
    'webpack-hot-middleware/client',
    path.join(process.cwd(), 'app/app.js'),
  ],

  output: {
    path: path.resolve(process.cwd(), 'build'),
    publicPath: '/',
    filename: '[name].js',
    chunkFilename: '[name].chunk.js',
  },

  module: {
    loaders: [
      {
        test: /\.js$/,
        loader: 'babel',
        exclude: /node_modules/,
        query: {
          plugins: [path.resolve(process.cwd(), 'config', 'relay', 'babelRelayPlugin')],
        }
      }
    ]
  },

  plugins: [
    new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
    new webpack.NoErrorsPlugin(),
    new HtmlWebpackPlugin({
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
      templateContent: templateContent(), // eslint-disable-line no-use-before-define
    }),
  ],

  resolve: {
    modules: ['app', 'node_modules'],
    extensions: [
      '',
      '.js',
    ],
    packageMains: [
      'main',
    ],
  },

  devtool: 'cheap-module-eval-source-map',
  target: 'web', // Make web variables accessible to webpack, e.g. window
  stats: false, // Don't show stats in the console
  progress: true,
};

function templateContent() {
  return fs.readFileSync(
    path.resolve(process.cwd(), 'app/index.html')
  ).toString();
}
